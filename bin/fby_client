#!/usr/bin/env python
import sys
import os.path

SAMPLE_TIME = 10 * 60

ROOT = os.path.abspath( os.path.join( os.path.dirname( __file__ ) , "../" ))
sys.path.insert(0 , os.path.join(ROOT , "lib"))
config_file = os.path.join( ROOT , "etc/config.json")


from friskby_client import FriskbyClient
from sampler import Sampler
from sds011 import SDS011
from device_config import DeviceConfig
from git_module import GitModule


def install(config):
    git_module = GitModule( url = config.getRepoURL() )
    git_module.checkout( config.getGitRef( ) )
    git_module.runTests( "tests/run_tests" )
    git_module.install( )
    config.save( filename = config_file )


def restart(config):
    install(config)
    os.execl( __file__ , __file__)

    raise Exception("Fatal error: os.execl() returned - trying to rollback")



def rollback(config):
    install(config)


config = DeviceConfig( config_file )
config.postGitVersion( )

device_id = config.getDeviceID( )
client_pm10 = FriskbyClient(config , "%s_PM10" % device_id)
client_pm25 = FriskbyClient(config , "%s_PM25" % device_id)
sampler = Sampler( SDS011(true) , sample_time = SAMPLE_TIME , sleep_time = 0.50 )

while True:
    data = sampler.collect( )
    client_pm10.post( data[0].mean() )
    client_pm25.post( data[1].mean() )

    new_config = config.downloadNew( )
    if new_config != config:
        try:
            restart( new_config )
        except:
            rollback( config )
    
