#!/usr/bin/env python
import sys
import os
import os.path
from serial import SerialException
import datetime
import time
import requests
from traceback import format_exception

SAMPLE_TIME = 10 * 60
SLEEP_TIME  = 0.50
EXCEPTION_COUNT = 0 #  #exceptions since last success

ROOT = os.path.abspath( os.path.join( os.path.dirname( __file__ ) , "../" ))
sys.path.insert(0 , os.path.join(ROOT , "lib"))
config_file = os.path.join( ROOT , "etc/config.json")
var_path = os.path.join(ROOT , "var")

import dist

from friskby_client import FriskbyClient
from sampler import Sampler
from device_config import DeviceConfig
from git_module import GitModule

if os.getenv("FRISKBY_TEST"):
    try:
        from sds011 import SDS011
    except SerialException:
        from mock_sds011 import SDS011
else:
    from sds011 import SDS011


def install(config):
    git_module = GitModule( url = config.getRepoURL() )
    git_module.checkout( config.getGitRef( ) )
    git_module.runTests( "tests/run_tests" )
    git_module.install( ROOT , files = dist.files , directories = dist.directories )
    config.save( filename = config_file )


def restart(config):
    install(config)
    os.execl( __file__ , __file__)

    raise Exception("Fatal error: os.execl() returned - trying to rollback")


def network_block():
    url = "http://www.google.com"
    timeout = 120
    start = datetime.datetime.now()
    while True:
        dt = datetime.datetime.now() - start
        if dt.total_seconds() > timeout:
            sys.exit("No network contact established - giving up")

        try:
            response = requests.get( url )
            if response.status_code == 200:
                break
        except Exception:
            time.sleep( 2 )



def rollback(config):
    install(config)

def collect():
    data = None
    try:
        data = sampler.collect( )
    except SerialException as se:
        if EXCEPTION_COUNT < 5:
            config.logMessage('Exception while collecting: %s' % str(se))
        EXCEPTION_COUNT += 1
    return data

def post(client_pm10, client_pm25, data):
    client_pm10.post( data[0].mean() )
    client_pm25.post( data[1].mean() )


def updateClient():
    new_config = config.downloadNew( )
    if new_config != config:
        try:
            config.logMessage("Restarting - new git version:%s" % new_config.getGitRef())
            restart( new_config )
        except Exception as exc:
            config.logMessage("Restart failed - trying rollback")
            rollback( config )
            config.logMessage("Rollback complete")


def main( argv ):
    network_block( )
    config = DeviceConfig( config_file )
    config.logMessage("Starting up")
    config.postGitVersion( )
    
    device_id = config.getDeviceID( )
    client_pm10 = FriskbyClient(config , "%s_PM10" % device_id, var_path)
    client_pm25 = FriskbyClient(config , "%s_PM25" % device_id, var_path)
    sampler = Sampler( SDS011(True) , SAMPLE_TIME , sleep_time = SLEEP_TIME )

    while True:
        if EXCEPTION_COUNT >= 5:
            # sleep exponentially long, but at most a day
            timeout = 2**EXCEPTION_COUNT * 60
            day = 3600 * 24
            time.sleep(min(timeout, day))

        try:
            data = collect(sampler)
            if not data:
                continue

            post(client_pm10, client_pm25, data)

            updateClient()

        except KeyboardInterrupt as e:
            # KeyboardInterrupt - i.e. Ctrl-C is special cased to 
            # make sure we can interrupt a running client manually.
            raise
        except Exception as a:
            exc_type, exc_value, exc_tb = sys.exc_info()
            tb_list = format_exception( exc_type , exc_value , exc_tb)
            if EXCEPTION_COUNT < 5:
                config.logMessage("Exception caught" , long_msg = "".join( tb_list ))
            EXCEPTION_COUNT += 1
        else:
            # try/except/else: if nothing has been raised we successfully posted
            EXCEPTION_COUNT = 0
            

if __name__ == "__main__":
    main( sys.argv )
